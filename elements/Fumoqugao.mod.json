{
  "_fv": 69,
  "_type": "procedure",
  "definition": {
    "procedurexml": "<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables><variable type=\"MCItem\" id=\"i1\">i1</variable></variables><block type=\"event_trigger\" deletable=\"false\" x=\"40\" y=\"40\"><field name=\"trigger\">entity_item_pickup</field><next><block type=\"controls_if\"><value name=\"IF0\"><block type=\"item_is_enchanted\"><value name=\"item\"><block type=\"itemstack_to_mcitem\"></block></value></block></value><statement name=\"DO0\"><block type=\"variables_set_itemstack\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" is_player_var=\"false\" has_entity=\"false\"></mutation><field name=\"VAR\">local:i1</field><value name=\"VAL\"><block type=\"itemstack_to_mcitem\"></block></value><next><block type=\"java_code\"><field name=\"CODE\">{&amp;#10;    var stack = i1;&amp;#10;    var enchs = stack.getEnchantmentTags();&amp;#10;    var map = Maps.&lt;Enchantment, Integer&gt;newLinkedHashMap();&amp;#10;    for (int i = 0; i &lt; enchs.size(); i++) {&amp;#10;        var e = enchs.getCompound(i);&amp;#10;        Optional.ofNullable(ForgeRegistries.ENCHANTMENTS.getValue(EnchantmentHelper.getEnchantmentId(e))).ifPresent(en -&gt; {&amp;#10;            var lvl = EnchantmentHelper.getEnchantmentLevel(e);&amp;#10;            map.computeIfPresent(en, (a, b) -&gt; Math.max(lvl, b));&amp;#10;            map.putIfAbsent(en, lvl);&amp;#10;        });&amp;#10;    }&amp;#10;    enchs.clear();&amp;#10;    EnchantmentHelper.setEnchantments(map, stack);&amp;#10;}</field></block></next></block></statement></block></next></block></xml>"
  }
}